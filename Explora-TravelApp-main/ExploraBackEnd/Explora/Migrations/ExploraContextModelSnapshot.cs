// <auto-generated />
using System;
using Explora.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Explora.Migrations
{
    [DbContext(typeof(ExploraContext))]
    partial class ExploraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Explora.Entity.TAirline", b =>
                {
                    b.Property<int>("IdAirline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAirline"));

                    b.Property<string>("AddressAirline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAirline");

                    b.ToTable("t_AIRLINE");
                });

            modelBuilder.Entity("Explora.Entity.TBillRoom", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuyTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuessEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("t_BILL_ROOM");
                });

            modelBuilder.Entity("Explora.Entity.TBu", b =>
                {
                    b.Property<int>("IdBus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBus"));

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmptySlot")
                        .HasColumnType("int");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNhaXe")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<string>("StartPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("IdBus");

                    b.HasIndex("IdNhaXe");

                    b.ToTable("t_BUS");
                });

            modelBuilder.Entity("Explora.Entity.TBusTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("GuessEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TBuIdBus")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TBuIdBus");

                    b.ToTable("t_BUS_TICKET");
                });

            modelBuilder.Entity("Explora.Entity.THotel", b =>
                {
                    b.Property<int>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHotel"));

                    b.Property<string>("AddressHotel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdHotel");

                    b.HasIndex("UserId");

                    b.ToTable("t_HOTEL");
                });

            modelBuilder.Entity("Explora.Entity.TNhaXe", b =>
                {
                    b.Property<int>("IdNhaXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNhaXe"));

                    b.Property<string>("AddressNhaXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("NhaXeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNhaXe");

                    b.ToTable("t_NHA_XE");
                });

            modelBuilder.Entity("Explora.Entity.TOrderBu", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBus")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("IdBus");

                    b.HasIndex("UserId");

                    b.ToTable("t_ORDER_BUS");
                });

            modelBuilder.Entity("Explora.Entity.TOrderPlane", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPlane")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("IdPlane");

                    b.HasIndex("UserId");

                    b.ToTable("t_ORDER_PLANE");
                });

            modelBuilder.Entity("Explora.Entity.TPlane", b =>
                {
                    b.Property<int>("IdPlane")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlane"));

                    b.Property<int>("EmptySlot")
                        .HasColumnType("int");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAirline")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("PlaneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<string>("StartPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPlane");

                    b.HasIndex("IdAirline");

                    b.ToTable("t_PLANE");
                });

            modelBuilder.Entity("Explora.Entity.TPlaneTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuessEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PasspostNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TPlaneIdPlane")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TPlaneIdPlane");

                    b.ToTable("t_PLANE_TICKET");
                });

            modelBuilder.Entity("Explora.Entity.TRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("t_ROLE");
                });

            modelBuilder.Entity("Explora.Entity.TRoleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("t_ROLE_USER");
                });

            modelBuilder.Entity("Explora.Entity.TRoom", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoom"));

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("IdRoom");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("t_ROOM");
                });

            modelBuilder.Entity("Explora.Entity.TRoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeId");

                    b.HasIndex("HotelId");

                    b.ToTable("T_TYPE_ROOM");
                });

            modelBuilder.Entity("Explora.Entity.TUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("EmailConfirm")
                        .HasColumnType("tinyint");

                    b.Property<string>("EmailConfirmToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlAvatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("t_USER");
                });

            modelBuilder.Entity("TBillRoomTRoom", b =>
                {
                    b.Property<int>("TBillRoomsBillId")
                        .HasColumnType("int");

                    b.Property<int>("TRoomsIdRoom")
                        .HasColumnType("int");

                    b.HasKey("TBillRoomsBillId", "TRoomsIdRoom");

                    b.HasIndex("TRoomsIdRoom");

                    b.ToTable("TBillRoomTRoom");
                });

            modelBuilder.Entity("Explora.Entity.TBillRoom", b =>
                {
                    b.HasOne("Explora.Entity.THotel", "Hotel")
                        .WithMany("BillRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TUser", "User")
                        .WithMany("TBillRooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Explora.Entity.TBu", b =>
                {
                    b.HasOne("Explora.Entity.TNhaXe", "IdNhaXeNavigation")
                        .WithMany("TBus")
                        .HasForeignKey("IdNhaXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdNhaXeNavigation");
                });

            modelBuilder.Entity("Explora.Entity.TBusTicket", b =>
                {
                    b.HasOne("Explora.Entity.TOrderBu", "Order")
                        .WithMany("TBusTickets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TBu", null)
                        .WithMany("TBusTickets")
                        .HasForeignKey("TBuIdBus");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Explora.Entity.THotel", b =>
                {
                    b.HasOne("Explora.Entity.TUser", "User")
                        .WithMany("THotels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Explora.Entity.TOrderBu", b =>
                {
                    b.HasOne("Explora.Entity.TBu", "IdBusNavigation")
                        .WithMany("TOrderBus")
                        .HasForeignKey("IdBus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TUser", "User")
                        .WithMany("TOrderBus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdBusNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Explora.Entity.TOrderPlane", b =>
                {
                    b.HasOne("Explora.Entity.TPlane", "IdPlaneNavigation")
                        .WithMany("TOrderPlanes")
                        .HasForeignKey("IdPlane")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TUser", "User")
                        .WithMany("TOrderPlanes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPlaneNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Explora.Entity.TPlane", b =>
                {
                    b.HasOne("Explora.Entity.TAirline", "IdAirlineNavigation")
                        .WithMany("TPlanes")
                        .HasForeignKey("IdAirline")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAirlineNavigation");
                });

            modelBuilder.Entity("Explora.Entity.TPlaneTicket", b =>
                {
                    b.HasOne("Explora.Entity.TOrderPlane", "Order")
                        .WithMany("TPlaneTickets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TPlane", null)
                        .WithMany("TPlaneTickets")
                        .HasForeignKey("TPlaneIdPlane");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Explora.Entity.TRoleUser", b =>
                {
                    b.HasOne("Explora.Entity.TRole", "Role")
                        .WithMany("TRoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TUser", "User")
                        .WithMany("TRoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Explora.Entity.TRoom", b =>
                {
                    b.HasOne("Explora.Entity.THotel", "Hotel")
                        .WithMany("TRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TRoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Explora.Entity.TRoomType", b =>
                {
                    b.HasOne("Explora.Entity.THotel", "hotel")
                        .WithMany("RoomTypes")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("TBillRoomTRoom", b =>
                {
                    b.HasOne("Explora.Entity.TBillRoom", null)
                        .WithMany()
                        .HasForeignKey("TBillRoomsBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Explora.Entity.TRoom", null)
                        .WithMany()
                        .HasForeignKey("TRoomsIdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Explora.Entity.TAirline", b =>
                {
                    b.Navigation("TPlanes");
                });

            modelBuilder.Entity("Explora.Entity.TBu", b =>
                {
                    b.Navigation("TBusTickets");

                    b.Navigation("TOrderBus");
                });

            modelBuilder.Entity("Explora.Entity.THotel", b =>
                {
                    b.Navigation("BillRooms");

                    b.Navigation("RoomTypes");

                    b.Navigation("TRooms");
                });

            modelBuilder.Entity("Explora.Entity.TNhaXe", b =>
                {
                    b.Navigation("TBus");
                });

            modelBuilder.Entity("Explora.Entity.TOrderBu", b =>
                {
                    b.Navigation("TBusTickets");
                });

            modelBuilder.Entity("Explora.Entity.TOrderPlane", b =>
                {
                    b.Navigation("TPlaneTickets");
                });

            modelBuilder.Entity("Explora.Entity.TPlane", b =>
                {
                    b.Navigation("TOrderPlanes");

                    b.Navigation("TPlaneTickets");
                });

            modelBuilder.Entity("Explora.Entity.TRole", b =>
                {
                    b.Navigation("TRoleUsers");
                });

            modelBuilder.Entity("Explora.Entity.TRoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Explora.Entity.TUser", b =>
                {
                    b.Navigation("TBillRooms");

                    b.Navigation("THotels");

                    b.Navigation("TOrderBus");

                    b.Navigation("TOrderPlanes");

                    b.Navigation("TRoleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
